{"ts":1356112500748,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356112502336,"patch":[[{"diffs":[[1,"function start() {\n  var canvas = document.getElementById(\"glcanvas\");\n \n  initWebGL(canvas);      // Initialize the GL context\n   \n  // Only continue if WebGL is available and working\n   \n  if (gl) {\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);                      // Set clear color to black, fully opaque\n    gl.enable(gl.DEPTH_TEST);                               // Enable depth testing\n    gl.depthFunc(gl.LEQUAL);                                // Near things obscure far things\n    gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);      // Clear the color as well as the depth buffer.\n  }\n}"]],"start1":0,"start2":0,"length1":0,"length2":594}]],"length":594,"saved":false}
{"ts":1356112695837,"patch":[[{"diffs":[[1,"function initWebGL(canvas) {\n  // Initialize the global variable gl to null.\n  gl = null;\n   \n  try {\n    // Try to grab the standard context. If it fails, fallback to experimental.\n    gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n  }\n  catch(e) {}\n   \n  // If we don't have a GL context, give up now\n  if (!gl) {\n    alert(\"Unable to initialize WebGL. Your browser may not support it.\");\n  }\n}\n"],[0,"function"]],"start1":0,"start2":0,"length1":8,"length2":434}]],"length":1020,"saved":false}
{"ts":1356112697496,"patch":[[{"diffs":[[0,";\n  }\n}\n"],[1,"\n"],[0,"function"]],"start1":418,"start2":418,"length1":16,"length2":17}]],"length":1021,"saved":false}
{"ts":1356113445606,"patch":[[{"diffs":[[0," start()"],[1," "],[0," {\n  var"]],"start1":435,"start2":435,"length1":16,"length2":17}]],"length":1022,"saved":false}
